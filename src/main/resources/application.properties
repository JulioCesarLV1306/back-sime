spring.application.name=backwebsime

# Configuración para el puerto (Render usa PORT como variable de entorno)
server.port=${PORT:8080}

# Configuración de base de datos (usa variables de entorno para producción)
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/backendwebsime}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuración de JPA
spring.jpa.show-sql=${SHOW_SQL:true}
spring.jpa.hibernate.ddl-auto=${DDL_AUTO:update}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Configuración básica de conexión
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=false

# Configuración de logs (reducida)
logging.level.org.hibernate.SQL=INFO

# Configuración de la API de DNI
dni.api.url=https://apiperu.dev/api/dni
dni.api.token=1c50e0e87152ccca99e2278d17c559e6466e10887c2eadb5f1d4e10b134b59cd

# Configuración de Swagger/OpenAPI
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.docExpansion=none